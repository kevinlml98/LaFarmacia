@model LaFarmacia.Models.T_InvoiceHeader

@{
    ViewBag.Title = "Create";
    
}

<h2>Creación de Factura</h2>

@if (ViewBag.ValorMensaje == 1)
{
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h2 class="modal-title">Mensaje</h2>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger">@ViewBag.MensajeProceso</div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}
else
{
    if (ViewBag.ValorMensaje == 0)
    {

    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <h3>Encabezado de la Factura</h3>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClientId, new { htmlAttributes = new { @class = "form-control", id = "IdCliente" } })
            @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PayMethodTypeId, "PayMethodTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PayMethodTypeId", null, htmlAttributes: new { @class = "form-control", id = "MetodoPago" })
            @Html.ValidationMessageFor(model => model.PayMethodTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <h3>Detalle de la Factura</h3>

    <div class="form-group">
        @Html.LabelFor(model => model.T_InvoiceDetail.T_Product.Code, "ProductoId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ProductoId", null, htmlAttributes: new { @class = "form-control", id = "Producto" })
            @Html.ValidationMessageFor(model => model.T_InvoiceDetail.T_Product.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class = "control-label col-md-2">Stock de producto</label>
        <div class="col-md-10">
        <input type="text" id="MostrarCantidad" value="0" class = "form-control" disabled/>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.T_InvoiceDetail.Count, "Count", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.T_InvoiceDetail.Count, new { htmlAttributes = new { @class = "form-control", id = "Cantidad" } })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.DropDownList("PrecioId", null, htmlAttributes: new { @class = "form-control", id = "PrecioUnitario" })
            @Html.ValidationMessageFor(model => model.T_InvoiceDetail.T_Product.Price, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Agregar Producto" class="btn btn-default" onclick="AgregarProducto(); return false" />
        </div>
    </div>


    <div id="divDetalle">

        <table class="table" id="tablaDetalle">

            <tr>

                <th>Código Producto</th>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>PrecioUnitario</th>
                <th>Total</th>
            </tr>

        </table>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SubTotal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SubTotal, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", id = "Subtotal" } })
            @Html.ValidationMessageFor(model => model.SubTotal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", id = "Total" } })
            @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Crear Factura" class="btn btn-default" />
            @if (ViewBag.Rol == 1 || ViewBag.Rol == 2)
            {
                //<input type="button" value="Crear Cliente" class="btn btn-default" onclick="document.location.href ='@Url.Content("~/Cliente/Create")'" />
                <input type="button" value="Crear Cliente" class="btn btn-default" id="Validarcliente" onclick="ValidarCliente(); return false" />
            }
            @if (ViewBag.Rol == 1)
            {
                <input type="button" value="Actualizar Producto" class="btn btn-default" onclick="document.location.href ='@Url.Content("~/Producto/Index")'" />
            }
        </div>
    </div>

</div>
}

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
            $('#myModal').modal('show');
            var num = 0;
            var SumSubtotal = 0;
            var Sumtotal = 0;
            let PrecioUnitario = document.getElementById("PrecioUnitario");
            PrecioUnitario.style.display = "none";
            let SelectProducto = document.getElementById("Producto");

            SelectProducto.addEventListener("change", function () {

                let ValorProducto = document.getElementById("Producto").value;
                let InputCantidad = document.getElementById("MostrarCantidad");

                let dato = {

                        'Code': ValorProducto,

                    }

                    $.ajax({
                           type: "POST",
                           url: '@Url.Action("CalcularStock", "Factura")',
                           contentType: "application/json; charset=utf-8",
                            data: JSON.stringify(dato),
                           dataType: "json",
                        success: function (data) {

                            if (data.Resultado === true) {

                                InputCantidad.value = data.Valor;

                            }

                        },
                           error: function () { alert('Error'); }
                    });


            });

            function AgregarDetalle() {

                let Producto = document.getElementById("Producto");
                let TextoSeleccionado = Producto.options[Producto.selectedIndex].text;
                let ValorProducto = document.getElementById("Producto").value;
                let Cantidad = document.getElementById("Cantidad").value;
                let MetodoPago = document.getElementById("MetodoPago");
                let MetodoPagoSeleccionado = MetodoPago.options[MetodoPago.selectedIndex].text;
                let Subtotal = document.getElementById("Subtotal");
                let Total = document.getElementById("Total");

                let PrecioUnitario = document.getElementById("PrecioUnitario");
                let PrecioSeleccionado = PrecioUnitario.options[Producto.selectedIndex].value;

                let Tabla = document.getElementById("tablaDetalle");
                let Tr = document.createElement("tr");
                let TdValorProducto = document.createElement("td");
                let TdProducto = document.createElement("td");
                let TdCantidad = document.createElement("td");
                let TdPrecioUnitario = document.createElement("td");
                let TdTotal = document.createElement("td");


                TdValorProducto.innerHTML = ValorProducto;
                TdProducto.innerHTML = TextoSeleccionado;
                TdCantidad.innerHTML = Cantidad;
                TdPrecioUnitario.innerHTML = parseFloat(PrecioSeleccionado);
                TdTotal.innerHTML = parseFloat(Cantidad) * parseFloat(PrecioSeleccionado);

                Tr.appendChild(TdValorProducto);
                Tr.appendChild(TdProducto);
                Tr.appendChild(TdCantidad);
                Tr.appendChild(TdPrecioUnitario);
                Tr.appendChild(TdTotal);

                Tabla.appendChild(Tr);

                SumSubtotal = SumSubtotal + parseFloat(Cantidad) * parseFloat(PrecioSeleccionado);
                Subtotal.value = SumSubtotal;

                let Impuesto = SumSubtotal * 0.13;

                Sumtotal = SumSubtotal + Impuesto;

                Total.value = Sumtotal;

                if (MetodoPagoSeleccionado === "Tarjeta") {

                    let ImpuestoTarjeta = Sumtotal * 0.02;

                    Total.value = Sumtotal + ImpuestoTarjeta

                } else {

                    Total.value = Sumtotal;

                }

                //Codigo de hiddens

                let DivDetalle = document.getElementById("divDetalle");
                let HiddenIndex = document.createElement("input");
                let HiddenValorProducto = document.createElement("input");
                let HiddenCantidad = document.createElement("input");

                HiddenValorProducto.name = "T_InvoiceDetailList.Index";
                HiddenIndex.value = num;
                HiddenIndex.type = "hidden";
                HiddenValorProducto.name = "T_InvoiceDetailList[" + num + "].ProductCode";
                HiddenValorProducto.value = ValorProducto;
                HiddenValorProducto.type = "hidden";
                HiddenCantidad.name = "T_InvoiceDetailList[" + num + "].Count";
                HiddenCantidad.value = Cantidad;
                HiddenCantidad.type = "hidden";
                DivDetalle.appendChild(HiddenIndex);
                DivDetalle.appendChild(HiddenValorProducto);
                DivDetalle.appendChild(HiddenCantidad);

                document.getElementById("Producto").value = "";
                document.getElementById("Cantidad").value = 0;

                num++;
            }

            function ValidarCliente() {

                let IdCliente = document.getElementById("IdCliente").value;

                    let dato = {

                        'ClientId': IdCliente,

                    }

                    $.ajax({
                           type: "POST",
                           url: '@Url.Action("ValidarCliente", "Factura")',
                           contentType: "application/json; charset=utf-8",
                            data: JSON.stringify(dato),
                           dataType: "json",
                        success: function (data) {

                            if (data.Resultado === false) {

                                alert(data.Texto);

                            } else {

                            }

                        },
                           error: function () { alert('Error'); }
                    });

            }

        function AgregarProducto() {


                let ValorProducto = document.getElementById("Producto").value;
                let Cantidad = document.getElementById("Cantidad").value;

                    let dato = {

                        'Code': ValorProducto,
                        'Count': Cantidad

                    }

                    $.ajax({
                           type: "POST",
                           url: '@Url.Action("ValidarProducto", "Factura")',
                           contentType: "application/json; charset=utf-8",
                            data: JSON.stringify(dato),
                           dataType: "json",
                        success: function (data) {

                            if (data.Resultado === false) {

                                alert(data.Texto);

                            } else {

                                alert(data.Texto);

                                //Logica de ingresar producto

                                let dato2 = {

                                    'ProductCode': ValorProducto,
                                    'Count': Cantidad

                                }

                                $.ajax({
                               type: "POST",
                               url: '@Url.Action("AgregarDetalle", "Factura")',
                               contentType: "application/json; charset=utf-8",
                                data: JSON.stringify(dato2),
                               dataType: "json",
                                 success: function (data) {

                                     console.log(data);
                                        

                               },
                           error: function () { alert('Error'); }
                    });


                            }

                        },
                           error: function () { alert('Error'); }
                    });

            }

</script>
    }
